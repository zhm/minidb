{"version":3,"file":"database-cursor.js","names":["DatabaseCursor","constructor","connection","rawCursor","converter","_connection","_rawCursor","_converter","_finished","parseValues","columns","values","parsedValues","i","length","value","column","name","hasRows","next","Promise","resolve","reject","err","finished","index","client","close","exports","default"],"sources":["../src/database-cursor.js"],"sourcesContent":["export default class DatabaseCursor {\n  constructor(connection, rawCursor, converter) {\n    this._connection = connection;\n    this._rawCursor = rawCursor;\n    this._converter = converter;\n    this._finished = false;\n  }\n\n  get connection() {\n    return this._connection;\n  }\n\n  parseValues(columns, values) {\n    let parsedValues = null;\n\n    if (values) {\n      parsedValues = {};\n\n      for (let i = 0; i < columns.length; ++i) {\n        let value = values[i];\n        const column = columns[i];\n\n        if (value != null && this._converter) {\n          value = this._converter({column, value});\n        }\n\n        parsedValues[column.name] = value;\n      }\n    }\n\n    return parsedValues;\n  }\n\n  get hasRows() {\n    return !this._finished;\n  }\n\n  async next() {\n    return new Promise((resolve, reject) => {\n      this._rawCursor.next((err, {finished, columns, values, index, client}) => {\n        this._finished = finished;\n\n        if (err) {\n          return reject(err);\n        } else if (finished) {\n          return resolve(null);\n        }\n\n        return resolve({columns: columns,\n                        values: columns && this.parseValues(columns, values),\n                        index: index,\n                        client});\n      });\n    });\n  }\n\n  async close() {\n    // exhaust the cursor to completion\n    while (!this._rawCursor.finished) {\n      await this.next();\n    }\n  }\n}\n"],"mappings":";;;;;;AAAe,MAAMA,cAAc,CAAC;EAClCC,WAAWA,CAACC,UAAU,EAAEC,SAAS,EAAEC,SAAS,EAAE;IAC5C,IAAI,CAACC,WAAW,GAAGH,UAAU;IAC7B,IAAI,CAACI,UAAU,GAAGH,SAAS;IAC3B,IAAI,CAACI,UAAU,GAAGH,SAAS;IAC3B,IAAI,CAACI,SAAS,GAAG,KAAK;EACxB;EAEA,IAAIN,UAAUA,CAAA,EAAG;IACf,OAAO,IAAI,CAACG,WAAW;EACzB;EAEAI,WAAWA,CAACC,OAAO,EAAEC,MAAM,EAAE;IAC3B,IAAIC,YAAY,GAAG,IAAI;IAEvB,IAAID,MAAM,EAAE;MACVC,YAAY,GAAG,CAAC,CAAC;MAEjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,OAAO,CAACI,MAAM,EAAE,EAAED,CAAC,EAAE;QACvC,IAAIE,KAAK,GAAGJ,MAAM,CAACE,CAAC,CAAC;QACrB,MAAMG,MAAM,GAAGN,OAAO,CAACG,CAAC,CAAC;QAEzB,IAAIE,KAAK,IAAI,IAAI,IAAI,IAAI,CAACR,UAAU,EAAE;UACpCQ,KAAK,GAAG,IAAI,CAACR,UAAU,CAAC;YAACS,MAAM;YAAED;UAAK,CAAC,CAAC;QAC1C;QAEAH,YAAY,CAACI,MAAM,CAACC,IAAI,CAAC,GAAGF,KAAK;MACnC;IACF;IAEA,OAAOH,YAAY;EACrB;EAEA,IAAIM,OAAOA,CAAA,EAAG;IACZ,OAAO,CAAC,IAAI,CAACV,SAAS;EACxB;EAEA,MAAMW,IAAIA,CAAA,EAAG;IACX,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtC,IAAI,CAAChB,UAAU,CAACa,IAAI,CAAC,CAACI,GAAG,EAAE;QAACC,QAAQ;QAAEd,OAAO;QAAEC,MAAM;QAAEc,KAAK;QAAEC;MAAM,CAAC,KAAK;QACxE,IAAI,CAAClB,SAAS,GAAGgB,QAAQ;QAEzB,IAAID,GAAG,EAAE;UACP,OAAOD,MAAM,CAACC,GAAG,CAAC;QACpB,CAAC,MAAM,IAAIC,QAAQ,EAAE;UACnB,OAAOH,OAAO,CAAC,IAAI,CAAC;QACtB;QAEA,OAAOA,OAAO,CAAC;UAACX,OAAO,EAAEA,OAAO;UAChBC,MAAM,EAAED,OAAO,IAAI,IAAI,CAACD,WAAW,CAACC,OAAO,EAAEC,MAAM,CAAC;UACpDc,KAAK,EAAEA,KAAK;UACZC;QAAM,CAAC,CAAC;MAC1B,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEA,MAAMC,KAAKA,CAAA,EAAG;IACZ;IACA,OAAO,CAAC,IAAI,CAACrB,UAAU,CAACkB,QAAQ,EAAE;MAChC,MAAM,IAAI,CAACL,IAAI,CAAC,CAAC;IACnB;EACF;AACF;AAACS,OAAA,CAAAC,OAAA,GAAA7B,cAAA","ignoreList":[]}