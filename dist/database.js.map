{"version":3,"file":"database.js","names":["_util","require","_esc","_interopRequireDefault","_humanizeDuration","e","__esModule","default","shortEnglishHumanizer","humanizeDuration","humanizer","language","languages","shortEn","ms","Database","CUSTOM_TYPES","constructor","options","setCustomType","typeName","definition","verbose","log","message","measure","text","block","debug","start","Date","getTime","result","error","ex","total","console","spacer","units","ident","value","esc","literal","open","close","each","sql","params","callback","_each","execute","_execute","beginTransaction","commit","rollback","transaction","all","rows","columns","values","index","cursor","push","get","length","buildWhere","where","clause","key","Object","keys","buildInsert","attributes","names","placeholders","Array","isArray","join","buildUpdate","sets","name","findEachByAttributes","statement","findStatement","tableName","orderBy","limit","offset","findAllByAttributes","findFirstByAttributes","trace","profile","time","selection","parts","format","insertStatement","table","updateStatement","updateValues","apply","raw","whereValues","whereClause","deleteStatement","insert","lastID","update","delete","toDatabase","column","type","toString","JSON","stringify","fromDatabase","parse","exports"],"sources":["../src/database.js"],"sourcesContent":["import { format } from 'util';\nimport esc from './esc';\nimport humanizeDuration from 'humanize-duration';\n\nconst shortEnglishHumanizer = humanizeDuration.humanizer({\n  language: 'shortEn',\n  languages: {\n    shortEn: {\n      ms: () => 'ms'\n    }\n  }\n});\n\nexport default class Database {\n  static CUSTOM_TYPES = {};\n\n  constructor(options) {\n    this.options = options;\n  }\n\n  static setCustomType(typeName, definition) {\n    if (definition) {\n      Database.CUSTOM_TYPES[typeName] = definition;\n    } else if (typeName) {\n      delete Database.CUSTOM_TYPES[typeName];\n    }\n  }\n\n  get verbose() {\n    return false;\n    // return true;\n  }\n\n  log(message) {\n    // if (Database.debug) {\n    //   console.warn('[SQL]', message);\n    // }\n  }\n\n  static async measure(text, block) {\n    if (!Database.debug) {\n      return await block();\n    }\n\n    const start = new Date().getTime();\n\n    let result = null;\n    let error = null;\n\n    try {\n      result = await block();\n    } catch (ex) {\n      error = ex;\n    }\n\n    const total = (new Date().getTime()) - start;\n\n    console.log('[SQL][' + shortEnglishHumanizer(total, {spacer: '', units: [ 'ms' ]}) + ']' + (error ? '[ERROR] ' : ' ') + text);\n\n    if (error) {\n      throw error;\n    }\n\n    return result;\n  }\n\n  ident(value) {\n    return esc(value, '`');\n  }\n\n  literal(value) {\n    return esc(value, \"'\");\n  }\n\n  async open() {\n    return null;\n  }\n\n  async close() {\n    return null;\n  }\n\n  async each(sql, params, callback) {\n    return await Database.measure(sql, async () => {\n      return await this._each(sql, params, callback);\n    });\n  }\n\n  async execute(sql, params) {\n    return await Database.measure(sql, async () => {\n      return await this._execute(sql, params);\n    });\n  }\n\n  beginTransaction() {\n    return this.execute('BEGIN TRANSACTION;');\n  }\n\n  commit() {\n    return this.execute('COMMIT TRANSACTION;');\n  }\n\n  rollback() {\n    return this.execute('ROLLBACK TRANSACTION;');\n  }\n\n  async transaction(block) {\n    await this.beginTransaction();\n\n    try {\n      await block(this);\n      await this.commit();\n    } catch (ex) {\n      console.log('ERROR IN TRANSACTION', ex);\n      await this.rollback();\n      throw ex;\n    }\n  }\n\n  async all(sql, params) {\n    const rows = [];\n\n    await this.each(sql, params, ({columns, values, index, cursor}) => {\n      if (values) {\n        rows.push(values);\n      }\n    });\n\n    return rows;\n  }\n\n  async get(sql, params) {\n    const rows = [];\n\n    await this.each(sql, params, ({columns, values, index, cursor}) => {\n      if (values) {\n        rows.push(values);\n      }\n    });\n\n    return (rows.length ? rows[0] : null);\n  }\n\n  buildWhere(where) {\n    const clause = [];\n    const values = [];\n\n    if (where) {\n      for (const key of Object.keys(where)) {\n        const value = where[key];\n\n        if (value != null) {\n          clause.push(this.ident(key) + ' = ?');\n          values.push(value);\n        } else {\n          clause.push(this.ident(key) + ' IS NULL');\n        }\n      }\n    }\n\n    return [ clause, values ];\n  }\n\n  buildInsert(attributes) {\n    const names = [];\n    const values = [];\n    const placeholders = [];\n\n    for (const key of Object.keys(attributes)) {\n      names.push(this.ident(key));\n      placeholders.push('?');\n\n      const value = attributes[key];\n\n      if (Array.isArray(value)) {\n        values.push('\\t' + value.join('\\t') + '\\t');\n      } else {\n        values.push(value);\n      }\n    }\n\n    return [ names, placeholders, values ];\n  }\n\n  buildUpdate(attributes) {\n    const sets = [];\n    const values = [];\n\n    for (const name of Object.keys(attributes)) {\n      sets.push(this.ident(name) + ' = ?');\n\n      const value = attributes[name];\n\n      if (Array.isArray(value)) {\n        values.push('\\t' + value.join('\\t') + '\\t');\n      } else {\n        values.push(value);\n      }\n    }\n\n    return [ sets, values ];\n  }\n\n  findEachByAttributes(options, callback) {\n    const statement = this.findStatement(options.tableName,\n                                         options.columns,\n                                         options.where,\n                                         options.orderBy,\n                                         options.limit,\n                                         options.offset);\n\n    return this.each(statement.sql, statement.values, callback);\n  }\n\n  findAllByAttributes(tableName, columns, where, orderBy, limit, offset) {\n    const statement = this.findStatement(tableName, columns, where, orderBy, limit, offset);\n\n    return this.all(statement.sql, statement.values);\n  }\n\n  async findFirstByAttributes(tableName, columns, attributes, orderBy) {\n    const rows = await this.findAllByAttributes(tableName, columns, attributes, orderBy, 1);\n\n    return rows != null ? rows[0] : null;\n  }\n\n  trace() {\n    return null;\n  }\n\n  profile(sql, time) {\n    console.log('PROFILE', '(' + time + 'ms)', sql);\n  }\n\n  findStatement(tableName, columns, where, orderBy, limit, offset) {\n    const selection = (columns == null ? [ '*' ] : columns);\n\n    const [ clause, values ] = this.buildWhere(where);\n\n    const parts = [];\n\n    if (clause.length > 0) {\n      parts.push(format(' WHERE %s', clause.join(' AND ')));\n    }\n\n    if (orderBy != null) {\n      parts.push(format(' ORDER BY %s', orderBy));\n    }\n\n    if (limit != null) {\n      parts.push(format(' LIMIT %s', this.literal(limit)));\n    }\n\n    if (offset != null) {\n      parts.push(format(' OFFSET %s', this.literal(offset)));\n    }\n\n    const sql = format('SELECT %s FROM %s%s',\n                       selection.join(', '),\n                       this.ident(tableName),\n                       parts.join(''));\n\n    return {sql, values};\n  }\n\n  insertStatement(table, attributes) {\n    const [ names, placeholders, values ] = this.buildInsert(attributes);\n\n    const sql = format('INSERT INTO %s (%s)\\nVALUES (%s);',\n                       table,\n                       names.join(', '),\n                       placeholders.join(', '));\n\n    return {sql, values};\n  }\n\n  updateStatement(table, where, attributes, options) {\n    const values = [];\n\n    const [ sets, updateValues ] = this.buildUpdate(attributes);\n\n    values.push.apply(values, updateValues);\n\n    if (options && options.raw) {\n      for (const name of Object.keys(options.raw)) {\n        sets.push(format('%s = %s', name, options.raw[name]));\n      }\n    }\n\n    const [ clause, whereValues ] = this.buildWhere(where);\n\n    values.push.apply(values, whereValues);\n\n    const whereClause = clause.length ? ' WHERE ' + clause.join(' AND ') : '';\n\n    const sql = format('UPDATE %s SET %s%s;',\n                       table, sets.join(', '), whereClause);\n\n    return {sql, values};\n  }\n\n  deleteStatement(table, where) {\n    const [ clause, values ] = this.buildWhere(where);\n\n    const whereClause = clause.length ? ' WHERE ' + clause.join(' AND ') : '';\n\n    const sql = format('DELETE FROM %s%s;',\n                       table, whereClause);\n\n    return {sql, values};\n  }\n\n  async insert(table, attributes, options) {\n    const statement = this.insertStatement(table, attributes);\n\n    await this.execute(statement.sql, statement.values);\n\n    return this.lastID;\n  }\n\n  async update(table, where, attributes, options) {\n    const statement = this.updateStatement(table, where, attributes, options);\n\n    await this.execute(statement.sql, statement.values);\n\n    return null;\n  }\n\n  async delete(table, where, options) {\n    const statement = this.deleteStatement(table, where);\n\n    await this.execute(statement.sql, statement.values);\n\n    return null;\n  }\n\n  toDatabase(value, column) {\n    if (value == null) {\n      return null;\n    }\n\n    if (Database.CUSTOM_TYPES[column.type]) {\n      return Database.CUSTOM_TYPES[column.type].toDatabase(value, column);\n    }\n\n    switch (column.type) {\n      case 'string':\n        return value.toString();\n\n      case 'integer':\n        return +value;\n\n      case 'double':\n        return +value;\n\n      case 'boolean':\n        return !!value;\n\n      case 'datetime':\n        return value;\n\n      case 'json':\n        return JSON.stringify(value);\n\n      default:\n        return value.toString();\n    }\n  }\n\n  fromDatabase(value, column) {\n    if (value == null) {\n      return null;\n    }\n\n    if (Database.CUSTOM_TYPES[column.type]) {\n      return Database.CUSTOM_TYPES[column.type].fromDatabase(value, column);\n    }\n\n    switch (column.type) {\n      case 'string':\n        return value.toString();\n\n      case 'integer':\n        return +value;\n\n      case 'double':\n        return +value;\n\n      case 'boolean':\n        return !!value;\n\n      case 'datetime':\n        return new Date(+value);\n\n      case 'json':\n        return JSON.parse(value);\n\n      default:\n        return value.toString();\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]}