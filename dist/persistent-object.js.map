{"version":3,"file":"persistent-object.js","names":["_util","require","_mixmatch","_interopRequireDefault","_assert","_database","e","__esModule","default","models","checkDatabase","db","assert","Database","PersistentObject","Mixin","constructor","attributes","initializePersistentObject","_db","rowID","_rowID","updateFromDatabaseAttributes","findFirstColumns","ModelClass","columns","findFirstByAttributes","tableName","findFirst","row","instance","findAllColumns","findAllByAttributes","findAllBySQL","sql","values","rows","all","map","findAll","orderBy","findEachBySQL","params","callback","each","index","findEach","options","findEachByAttributes","findOrCreate","create","count","result","modelMethods","slice","register","modelClass","push","includeInto","wrap","method","args","concat","apply","column","simple","varName","name","customType","CUSTOM_TYPES","type","customGetter","getter","customSetter","setter","Object","defineProperty","prototype","get","set","value","enumerable","configurable","assignAttributes","_assignAttributes","key","keys","columnsByAttributeName","_buildColumns","byColumnName","_columnsByColumnName","byAttributeName","_columnsByAttributeName","columnsByColumnName","_updateFromDatabaseAttributes","fromDatabase","objectCreatedAt","created_at","objectUpdatedAt","updated_at","toNumber","id","databaseValues","toDatabase","integer","updateTimestamps","now","Date","_objectCreatedAt","_objectUpdatedAt","date","isPersisted","save","timestamps","rest","beforeSave","insert","pk","update","afterSave","delete","beforeDelete","afterDelete","loadOne","model","ivar","setOne","exports"],"sources":["../src/persistent-object.js"],"sourcesContent":["import {format} from 'util';\nimport Mixin from 'mixmatch';\nimport assert from 'assert';\nimport Database from './database';\n\nconst models = [];\n\nfunction checkDatabase(db) {\n  assert(db instanceof Database, 'invalid db');\n}\n\nexport default class PersistentObject extends Mixin {\n  constructor(db, attributes) {\n    super();\n\n    this.initializePersistentObject(db, attributes);\n  }\n\n  get db() {\n    return this._db;\n  }\n\n  get rowID() {\n    return this._rowID;\n  }\n\n  initializePersistentObject(db, attributes) {\n    this._db = db;\n\n    this.updateFromDatabaseAttributes(attributes || {}, db);\n\n    return this;\n  }\n\n  static async findFirstColumns(ModelClass, db, attributes, columns) {\n    return await db.findFirstByAttributes(ModelClass.tableName, columns, attributes);\n  }\n\n  static async findFirst(ModelClass, db, attributes) {\n    const row = await db.findFirstByAttributes(ModelClass.tableName, null, attributes);\n\n    if (row) {\n      const instance = new ModelClass();\n\n      instance.initializePersistentObject(db, row);\n\n      return instance;\n    }\n\n    return null;\n  }\n\n  static async findAllColumns(ModelClass, db, attributes, columns) {\n    return await db.findAllByAttributes(ModelClass.tableName, columns, attributes);\n  }\n\n  static async findAllBySQL(ModelClass, db, sql, values) {\n    const rows = await db.all(sql, values);\n\n    return rows.map((row) => {\n      const instance = new ModelClass();\n\n      instance.initializePersistentObject(db, row);\n\n      return instance;\n    });\n  }\n\n  static async findAll(ModelClass, db, attributes, orderBy) {\n    const rows = await db.findAllByAttributes(ModelClass.tableName, null, attributes, orderBy);\n\n    return rows.map((row) => {\n      const instance = new ModelClass();\n\n      instance.initializePersistentObject(db, row);\n\n      return instance;\n    });\n  }\n\n  static findEachBySQL(ModelClass, db, sql, params, callback) {\n    return db.each(sql, params, async ({columns, values, index}) => {\n      if (values) {\n        const instance = new ModelClass();\n\n        instance.initializePersistentObject(db, values);\n\n        return await callback(instance, {columns, values, index});\n      }\n\n      return null;\n    });\n  }\n\n  static findEach(ModelClass, db, options, callback) {\n    return db.findEachByAttributes({tableName: ModelClass.tableName, ...options}, async ({columns, values, index}) => {\n      if (values) {\n        const instance = new ModelClass();\n\n        instance.initializePersistentObject(db, values);\n\n        return await callback(instance, {columns, values, index});\n      }\n\n      return null;\n    });\n  }\n\n  static async findOrCreate(ModelClass, db, attributes) {\n    const row = await db.findFirstByAttributes(ModelClass.tableName, null, attributes);\n\n    const instance = new ModelClass();\n\n    instance.initializePersistentObject(db, {...row, ...attributes});\n\n    return instance;\n  }\n\n  static create(ModelClass, db, attributes) {\n    const instance = new ModelClass();\n\n    instance.initializePersistentObject(db, attributes);\n\n    return instance;\n  }\n\n  static async count(ModelClass, db, attributes) {\n    const result = await db.findFirstByAttributes(ModelClass.tableName, [ 'COUNT(1) AS count' ], attributes);\n\n    return result.count;\n  }\n\n  static get modelMethods() {\n    return [ 'findFirst', 'findFirstColumns', 'findAll', 'findAllBySQL', 'findAllColumns', 'findEach', 'findEachBySQL', 'findOrCreate', 'create', 'count' ];\n  }\n\n  static get models() {\n    return models.slice();\n  }\n\n  static register(modelClass) {\n    models.push(modelClass);\n\n    PersistentObject.includeInto(modelClass);\n\n    const wrap = (method) => {\n      return (...params) => {\n        const args = [ modelClass ].concat(params);\n        return PersistentObject[method].apply(PersistentObject, args);\n      };\n    };\n\n    for (const method of PersistentObject.modelMethods) {\n      modelClass[method] = wrap(method);\n    }\n\n    for (const column of modelClass.columns) {\n      if (column.simple) {\n        const varName = '_' + column.name;\n\n        const customType = Database.CUSTOM_TYPES[column.type];\n\n        const customGetter = customType && customType.getter ? customType.getter({varName, column}) : null;\n        const customSetter = customType && customType.setter ? customType.setter({varName, column}) : null;\n\n        Object.defineProperty(modelClass.prototype, column.name, {\n          get: customGetter || function getter() {\n            return this[varName];\n          },\n          set: customSetter || function setter(value) {\n            this[varName] = value;\n          },\n          enumerable: true,\n          configurable: true\n        });\n      }\n    }\n  }\n\n  assignAttributes(attributes) {\n    this._assignAttributes(attributes);\n  }\n\n  _assignAttributes(attributes) {\n    for (const key of Object.keys(attributes)) {\n      const column = this.columnsByAttributeName[key];\n\n      if (column) {\n        if (column.simple) {\n          // use the setter\n          this[column.name] = attributes[column.name];\n        } else {\n          this['_' + column.name] = attributes[column.name];\n        }\n      }\n    }\n  }\n\n  _buildColumns() {\n    const byColumnName = this.constructor._columnsByColumnName = {};\n    const byAttributeName = this.constructor._columnsByAttributeName = {};\n\n    for (const column of this.constructor.columns) {\n      byColumnName[column.column] = column;\n      byAttributeName[column.name] = column;\n    }\n  }\n\n  get columnsByColumnName() {\n    if (!this.constructor._columnsByColumnName) {\n      this._buildColumns();\n    }\n    return this.constructor._columnsByColumnName;\n  }\n\n  get columnsByAttributeName() {\n    if (!this.constructor._columnsByAttributeName) {\n      this._buildColumns();\n    }\n    return this.constructor._columnsByAttributeName;\n  }\n\n  updateFromDatabaseAttributes(attributes, db) {\n    this._updateFromDatabaseAttributes(attributes, db || this.db);\n  }\n\n  _updateFromDatabaseAttributes(attributes, db) {\n    db = db || this.db;\n\n    checkDatabase(db);\n\n    for (const key of Object.keys(attributes)) {\n      const column = this.columnsByColumnName[key];\n\n      const value = column && db.fromDatabase(attributes[column.column], column);\n\n      if (column && column.simple) {\n        // call the setter\n        this[column.name] = value;\n      } else if (column) {\n        this['_' + column.name] = value;\n      } else if (key !== 'id' && key !== 'created_at' && key !== 'updated_at') {\n        // throw new Error(format(\"column definition for '%s' does not exist\", key));\n      }\n    }\n\n    this.objectCreatedAt = db.fromDatabase(attributes.created_at, {type: 'datetime'});\n    this.objectUpdatedAt = db.fromDatabase(attributes.updated_at, {type: 'datetime'});\n\n    this._rowID = this.toNumber(attributes.id);\n  }\n\n  attributes() {\n    const values = {};\n\n    for (const column of this.constructor.columns) {\n      const name = column.name;\n\n      values['_' + name] = this['_' + name];\n    }\n\n    return values;\n  }\n\n  databaseValues(db) {\n    db = db || this.db;\n\n    checkDatabase(db);\n\n    const values = {};\n\n    for (const column of this.constructor.columns) {\n      const name = column.name;\n      const value = this['_' + name];\n\n      // TODO(zhm) this doesn't work with the id attribute\n      // if (value == null && column.null === false) {\n      //   throw Error(format('column %s cannot be null', name));\n      // }\n\n      values[column.column] = db.toDatabase(value, column);\n    }\n\n    return values;\n  }\n\n  toNumber(integer) {\n    return integer != null ? +integer : null;\n  }\n\n  updateTimestamps() {\n    const now = new Date();\n\n    if (!this.objectCreatedAt) {\n      this.objectCreatedAt = now;\n    }\n\n    this.objectUpdatedAt = now;\n  }\n\n  get objectCreatedAt() {\n    return this._objectCreatedAt;\n  }\n\n  get objectUpdatedAt() {\n    return this._objectUpdatedAt;\n  }\n\n  set objectCreatedAt(date) {\n    this._objectCreatedAt = date;\n  }\n\n  set objectUpdatedAt(date) {\n    this._objectUpdatedAt = date;\n  }\n\n  get isPersisted() {\n    return this.rowID > 0;\n  }\n\n  async save({db, timestamps, ...rest} = {}) {\n    db = db || this.db;\n\n    checkDatabase(db);\n\n    if (this.beforeSave) {\n      const result = await this.beforeSave({db, timestamps, ...rest});\n\n      if (result === false) {\n        return this;\n      }\n    }\n\n    if (timestamps !== false) {\n      this.updateTimestamps();\n    }\n\n    const values = this.databaseValues(db);\n\n    values.created_at = db.toDatabase(this.objectCreatedAt, {type: 'datetime'});\n    values.updated_at = db.toDatabase(this.objectUpdatedAt, {type: 'datetime'});\n\n    if (!this.isPersisted) {\n      this._rowID = await db.insert(this.constructor.tableName, values, {pk: 'id'});\n    } else {\n      await db.update(this.constructor.tableName, {id: this.rowID}, values);\n    }\n\n    if (this.afterSave) {\n      await this.afterSave({db, timestamps, ...rest});\n    }\n\n    return this;\n  }\n\n  async delete({db, ...rest} = {}) {\n    db = db || this.db;\n\n    checkDatabase(db);\n\n    if (this.isPersisted) {\n      if (this.beforeDelete) {\n        const result = await this.beforeDelete({db, ...rest});\n\n        if (result === false) {\n          return this;\n        }\n      }\n\n      await db.delete(this.constructor.tableName, {id: this.rowID});\n\n      if (this.afterDelete) {\n        await this.afterDelete({db, ...rest});\n      }\n\n      this._rowID = null;\n      this.objectCreatedAt = null;\n      this.objectUpdatedAt = null;\n    }\n\n    return this;\n  }\n\n  async loadOne(name, model, id, db) {\n    db = db || this.db;\n\n    checkDatabase(db);\n\n    const ivar = '_' + name;\n\n    const pk = id || this[ivar + 'RowID'];\n\n    if (pk == null) {\n      return null;\n    }\n\n    if (this[ivar]) {\n      return this[ivar];\n    }\n\n    const instance = await model.findFirst(db, {id: pk});\n\n    this.setOne(name, instance);\n\n    return this[ivar];\n  }\n\n  setOne(name, instance) {\n    const ivar = '_' + name;\n\n    if (instance) {\n      this[ivar] = instance;\n      this[ivar + 'ID'] = instance.id;\n      this[ivar + 'RowID'] = instance.rowID;\n    } else {\n      this[ivar] = null;\n      this[ivar + 'ID'] = null;\n      this[ivar + 'RowID'] = null;\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]}