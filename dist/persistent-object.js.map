{"version":3,"sources":["../src/persistent-object.js"],"names":["models","checkDatabase","db","Database","PersistentObject","Mixin","constructor","attributes","initializePersistentObject","_db","rowID","_rowID","updateFromDatabaseAttributes","findFirstColumns","ModelClass","columns","findFirstByAttributes","tableName","findFirst","row","instance","findAllColumns","findAllByAttributes","findAllBySQL","sql","values","rows","all","map","findAll","orderBy","findEachBySQL","params","callback","each","index","findEach","options","findEachByAttributes","findOrCreate","create","count","result","modelMethods","slice","register","modelClass","push","includeInto","wrap","method","args","concat","apply","column","simple","varName","name","customType","CUSTOM_TYPES","type","customGetter","getter","customSetter","setter","Object","defineProperty","prototype","get","set","value","enumerable","configurable","assignAttributes","_assignAttributes","key","keys","columnsByAttributeName","_buildColumns","byColumnName","_columnsByColumnName","byAttributeName","_columnsByAttributeName","columnsByColumnName","_updateFromDatabaseAttributes","fromDatabase","objectCreatedAt","created_at","objectUpdatedAt","updated_at","toNumber","id","databaseValues","toDatabase","integer","updateTimestamps","now","Date","_objectCreatedAt","_objectUpdatedAt","date","isPersisted","save","timestamps","rest","beforeSave","insert","pk","update","afterSave","delete","beforeDelete","afterDelete","loadOne","model","ivar","setOne"],"mappings":"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","sourcesContent":["import {format} from 'util';\nimport Mixin from 'mixmatch';\nimport assert from 'assert';\nimport Database from './database';\n\nconst models = [];\n\nfunction checkDatabase(db) {\n  assert(db instanceof Database, 'invalid db');\n}\n\nexport default class PersistentObject extends Mixin {\n  constructor(db, attributes) {\n    super();\n\n    this.initializePersistentObject(db, attributes);\n  }\n\n  get db() {\n    return this._db;\n  }\n\n  get rowID() {\n    return this._rowID;\n  }\n\n  initializePersistentObject(db, attributes) {\n    this._db = db;\n\n    this.updateFromDatabaseAttributes(attributes || {}, db);\n\n    return this;\n  }\n\n  static async findFirstColumns(ModelClass, db, attributes, columns) {\n    return await db.findFirstByAttributes(ModelClass.tableName, columns, attributes);\n  }\n\n  static async findFirst(ModelClass, db, attributes) {\n    const row = await db.findFirstByAttributes(ModelClass.tableName, null, attributes);\n\n    if (row) {\n      const instance = new ModelClass();\n\n      instance.initializePersistentObject(db, row);\n\n      return instance;\n    }\n\n    return null;\n  }\n\n  static async findAllColumns(ModelClass, db, attributes, columns) {\n    return await db.findAllByAttributes(ModelClass.tableName, columns, attributes);\n  }\n\n  static async findAllBySQL(ModelClass, db, sql, values) {\n    const rows = await db.all(sql, values);\n\n    return rows.map((row) => {\n      const instance = new ModelClass();\n\n      instance.initializePersistentObject(db, row);\n\n      return instance;\n    });\n  }\n\n  static async findAll(ModelClass, db, attributes, orderBy) {\n    const rows = await db.findAllByAttributes(ModelClass.tableName, null, attributes, orderBy);\n\n    return rows.map((row) => {\n      const instance = new ModelClass();\n\n      instance.initializePersistentObject(db, row);\n\n      return instance;\n    });\n  }\n\n  static findEachBySQL(ModelClass, db, sql, params, callback) {\n    return db.each(sql, params, async ({columns, values, index}) => {\n      if (values) {\n        const instance = new ModelClass();\n\n        instance.initializePersistentObject(db, values);\n\n        return await callback(instance, {columns, values, index});\n      }\n\n      return null;\n    });\n  }\n\n  static findEach(ModelClass, db, options, callback) {\n    return db.findEachByAttributes({tableName: ModelClass.tableName, ...options}, async ({columns, values, index}) => {\n      if (values) {\n        const instance = new ModelClass();\n\n        instance.initializePersistentObject(db, values);\n\n        return await callback(instance, {columns, values, index});\n      }\n\n      return null;\n    });\n  }\n\n  static async findOrCreate(ModelClass, db, attributes) {\n    const row = await db.findFirstByAttributes(ModelClass.tableName, null, attributes);\n\n    const instance = new ModelClass();\n\n    instance.initializePersistentObject(db, {...row, ...attributes});\n\n    return instance;\n  }\n\n  static create(ModelClass, db, attributes) {\n    const instance = new ModelClass();\n\n    instance.initializePersistentObject(db, attributes);\n\n    return instance;\n  }\n\n  static async count(ModelClass, db, attributes) {\n    const result = await db.findFirstByAttributes(ModelClass.tableName, [ 'COUNT(1) AS count' ], attributes);\n\n    return result.count;\n  }\n\n  static get modelMethods() {\n    return [ 'findFirst', 'findFirstColumns', 'findAll', 'findAllBySQL', 'findAllColumns', 'findEach', 'findEachBySQL', 'findOrCreate', 'create', 'count' ];\n  }\n\n  static get models() {\n    return models.slice();\n  }\n\n  static register(modelClass) {\n    models.push(modelClass);\n\n    PersistentObject.includeInto(modelClass);\n\n    const wrap = (method) => {\n      return (...params) => {\n        const args = [ modelClass ].concat(params);\n        return PersistentObject[method].apply(PersistentObject, args);\n      };\n    };\n\n    for (const method of PersistentObject.modelMethods) {\n      modelClass[method] = wrap(method);\n    }\n\n    for (const column of modelClass.columns) {\n      if (column.simple) {\n        const varName = '_' + column.name;\n\n        const customType = Database.CUSTOM_TYPES[column.type];\n\n        const customGetter = customType && customType.getter ? customType.getter({varName, column}) : null;\n        const customSetter = customType && customType.setter ? customType.setter({varName, column}) : null;\n\n        Object.defineProperty(modelClass.prototype, column.name, {\n          get: customGetter || function getter() {\n            return this[varName];\n          },\n          set: customSetter || function setter(value) {\n            this[varName] = value;\n          },\n          enumerable: true,\n          configurable: true\n        });\n      }\n    }\n  }\n\n  assignAttributes(attributes) {\n    this._assignAttributes(attributes);\n  }\n\n  _assignAttributes(attributes) {\n    for (const key of Object.keys(attributes)) {\n      const column = this.columnsByAttributeName[key];\n\n      if (column) {\n        if (column.simple) {\n          // use the setter\n          this[column.name] = attributes[column.name];\n        } else {\n          this['_' + column.name] = attributes[column.name];\n        }\n      }\n    }\n  }\n\n  _buildColumns() {\n    const byColumnName = this.constructor._columnsByColumnName = {};\n    const byAttributeName = this.constructor._columnsByAttributeName = {};\n\n    for (const column of this.constructor.columns) {\n      byColumnName[column.column] = column;\n      byAttributeName[column.name] = column;\n    }\n  }\n\n  get columnsByColumnName() {\n    if (!this.constructor._columnsByColumnName) {\n      this._buildColumns();\n    }\n    return this.constructor._columnsByColumnName;\n  }\n\n  get columnsByAttributeName() {\n    if (!this.constructor._columnsByAttributeName) {\n      this._buildColumns();\n    }\n    return this.constructor._columnsByAttributeName;\n  }\n\n  updateFromDatabaseAttributes(attributes, db) {\n    this._updateFromDatabaseAttributes(attributes, db || this.db);\n  }\n\n  _updateFromDatabaseAttributes(attributes, db) {\n    db = db || this.db;\n\n    checkDatabase(db);\n\n    for (const key of Object.keys(attributes)) {\n      const column = this.columnsByColumnName[key];\n\n      const value = column && db.fromDatabase(attributes[column.column], column);\n\n      if (column && column.simple) {\n        // call the setter\n        this[column.name] = value;\n      } else if (column) {\n        this['_' + column.name] = value;\n      } else if (key !== 'id' && key !== 'created_at' && key !== 'updated_at') {\n        // throw new Error(format(\"column definition for '%s' does not exist\", key));\n      }\n    }\n\n    this.objectCreatedAt = db.fromDatabase(attributes.created_at, {type: 'datetime'});\n    this.objectUpdatedAt = db.fromDatabase(attributes.updated_at, {type: 'datetime'});\n\n    this._rowID = this.toNumber(attributes.id);\n  }\n\n  attributes() {\n    const values = {};\n\n    for (const column of this.constructor.columns) {\n      const name = column.name;\n\n      values['_' + name] = this['_' + name];\n    }\n\n    return values;\n  }\n\n  databaseValues(db) {\n    db = db || this.db;\n\n    checkDatabase(db);\n\n    const values = {};\n\n    for (const column of this.constructor.columns) {\n      const name = column.name;\n      const value = this['_' + name];\n\n      // TODO(zhm) this doesn't work with the id attribute\n      // if (value == null && column.null === false) {\n      //   throw Error(format('column %s cannot be null', name));\n      // }\n\n      values[column.column] = db.toDatabase(value, column);\n    }\n\n    return values;\n  }\n\n  toNumber(integer) {\n    return integer != null ? +integer : null;\n  }\n\n  updateTimestamps() {\n    const now = new Date();\n\n    if (!this.objectCreatedAt) {\n      this.objectCreatedAt = now;\n    }\n\n    this.objectUpdatedAt = now;\n  }\n\n  get objectCreatedAt() {\n    return this._objectCreatedAt;\n  }\n\n  get objectUpdatedAt() {\n    return this._objectUpdatedAt;\n  }\n\n  set objectCreatedAt(date) {\n    this._objectCreatedAt = date;\n  }\n\n  set objectUpdatedAt(date) {\n    this._objectUpdatedAt = date;\n  }\n\n  get isPersisted() {\n    return this.rowID > 0;\n  }\n\n  async save({db, timestamps, ...rest} = {}) {\n    db = db || this.db;\n\n    checkDatabase(db);\n\n    if (this.beforeSave) {\n      const result = await this.beforeSave({db, timestamps, ...rest});\n\n      if (result === false) {\n        return this;\n      }\n    }\n\n    if (timestamps !== false) {\n      this.updateTimestamps();\n    }\n\n    const values = this.databaseValues(db);\n\n    values.created_at = db.toDatabase(this.objectCreatedAt, {type: 'datetime'});\n    values.updated_at = db.toDatabase(this.objectUpdatedAt, {type: 'datetime'});\n\n    if (!this.isPersisted) {\n      this._rowID = await db.insert(this.constructor.tableName, values, {pk: 'id'});\n    } else {\n      await db.update(this.constructor.tableName, {id: this.rowID}, values);\n    }\n\n    if (this.afterSave) {\n      await this.afterSave({db, timestamps, ...rest});\n    }\n\n    return this;\n  }\n\n  async delete({db, ...rest} = {}) {\n    db = db || this.db;\n\n    checkDatabase(db);\n\n    if (this.isPersisted) {\n      if (this.beforeDelete) {\n        const result = await this.beforeDelete({db, ...rest});\n\n        if (result === false) {\n          return this;\n        }\n      }\n\n      await db.delete(this.constructor.tableName, {id: this.rowID});\n\n      if (this.afterDelete) {\n        await this.afterDelete({db, ...rest});\n      }\n\n      this._rowID = null;\n      this.objectCreatedAt = null;\n      this.objectUpdatedAt = null;\n    }\n\n    return this;\n  }\n\n  async loadOne(name, model, id, db) {\n    db = db || this.db;\n\n    checkDatabase(db);\n\n    const ivar = '_' + name;\n\n    const pk = id || this[ivar + 'RowID'];\n\n    if (pk == null) {\n      return null;\n    }\n\n    if (this[ivar]) {\n      return this[ivar];\n    }\n\n    const instance = await model.findFirst(db, {id: pk});\n\n    this.setOne(name, instance);\n\n    return this[ivar];\n  }\n\n  setOne(name, instance) {\n    const ivar = '_' + name;\n\n    if (instance) {\n      this[ivar] = instance;\n      this[ivar + 'ID'] = instance.id;\n      this[ivar + 'RowID'] = instance.rowID;\n    } else {\n      this[ivar] = null;\n      this[ivar + 'ID'] = null;\n      this[ivar + 'RowID'] = null;\n    }\n  }\n}\n"],"file":"persistent-object.js"}