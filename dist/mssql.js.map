{"version":3,"file":"mssql.js","names":["_postgresConnection","_interopRequireDefault","require","_mssqlFormat","_util","_esc","_database","e","__esModule","default","mssql","MSSQL","Database","constructor","options","client","driver","ident","value","esc","connect","db","PostgresConnection","shutdown","dialect","_each","sql","params","callback","Error","close","query","_execute","beginTransaction","commit","rollback","transaction","block","using","arrayFormatString","array","Number","isInteger","buildWhere","where","clause","key","Object","keys","push","format","mssqlformat","buildInsert","attributes","includeNames","names","values","placeholders","Array","isArray","toString","Date","toISOString","raw","buildUpdate","sets","insertStatement","table","pk","join","insertStatements","arrayOfAttributes","arrayOfValues","insert","statement","result","all","id","toDatabase","column","type","fromDatabase","exports"],"sources":["../src/mssql.js"],"sourcesContent":["import PostgresConnection from './postgres-connection';\nimport mssqlformat from './mssql-format';\nimport { format } from 'util';\nimport esc from './esc';\nimport Database from './database';\n\nlet mssql = null;\n\nexport default class MSSQL extends Database {\n  constructor(options) {\n    super(options);\n\n    this.client = options.client;\n  }\n\n  static set driver(driver) {\n    mssql = driver;\n    // PostgresConnection.driver = driver;\n  }\n\n  ident(value) {\n    return esc(value, '\"');\n  }\n\n  static async connect(db) {\n    return await PostgresConnection.connect(db);\n  }\n\n  static shutdown() {\n    PostgresConnection.shutdown();\n  }\n\n  get dialect() {\n    return 'mssql';\n  }\n\n  async _each(sql, params, callback) {\n    throw new Error('not implemented');\n  }\n\n  async close() {\n    throw new Error('not implemented');\n  }\n\n  async query(sql, params) {\n    throw new Error('not implemented');\n  }\n\n  async _execute(sql, params) {\n    throw new Error('not implemented');\n  }\n\n  beginTransaction() {\n    throw new Error('not implemented');\n  }\n\n  commit() {\n    throw new Error('not implemented');\n  }\n\n  rollback() {\n    throw new Error('not implemented');\n  }\n\n  async transaction(block) {\n    throw new Error('not implemented');\n  }\n\n  static transaction(options, block) {\n    throw new Error('not implemented');\n  }\n\n  static async using(options, block) {\n    throw new Error('not implemented');\n  }\n\n  arrayFormatString(array) {\n    if (Number.isInteger(array[0])) {\n      return 'ARRAY[%L]::bigint[]';\n    } else if (typeof array[0] === 'number') {\n      return 'ARRAY[%L]::double precision[]';\n    }\n\n    return 'ARRAY[%L]';\n  }\n\n  buildWhere(where) {\n    const clause = [];\n\n    if (where) {\n      for (const key of Object.keys(where)) {\n        const value = where[key];\n\n        if (value == null) {\n          clause.push(format('[%s] IS NULL', key));\n        // } else if (Array.isArray(value)) {\n        //   clause.push(mssqlformat('%I = ANY (' + this.arrayFormatString(where[key]) + ')', key, value));\n        } else {\n          clause.push(mssqlformat('[%s] = %L', key, value));\n        }\n      }\n    }\n\n    return [ clause, [] ];\n  }\n\n  buildInsert(attributes, includeNames = true) {\n    const names = [];\n    const values = [];\n    const placeholders = [];\n\n    // Use the literal values instead of placeholders  because parameterized\n    // queries require prepared statements. Prepared statements are stateful\n    // and impose requirements on the connection that are incompatible with\n    // pgbouncer.\n    for (const key of Object.keys(attributes)) {\n      if (includeNames) {\n        names.push(format('[%s]', key));\n      }\n\n      const value = attributes[key];\n\n      if (Array.isArray(value)) {\n        // placeholders.push(format('ARRAY[%L]', value));\n        placeholders.push(mssqlformat('%L', value.toString()));\n      } else if (value instanceof Date) {\n        placeholders.push(mssqlformat('%L', value.toISOString()));\n      } else if (value && value.raw) {\n        placeholders.push(format('%s', value.raw));\n      } else {\n        placeholders.push(mssqlformat('%L', value));\n      }\n    }\n\n    return [ names, placeholders, values ];\n  }\n\n  buildUpdate(attributes) {\n    const sets = [];\n    const values = [];\n\n    for (const key of Object.keys(attributes)) {\n      const value = attributes[key];\n\n      if (Array.isArray(value)) {\n        // sets.push(mssqlformat('%I = ARRAY[%L]', key, value));\n        sets.push(mssqlformat('[%s] = %L', key, value));\n      } else if (value instanceof Date) {\n        sets.push(mssqlformat('[%s] = %L', key, value.toISOString()));\n      } else if (value && value.raw) {\n        sets.push(format('[%s] = %s', value.raw));\n      } else {\n        sets.push(mssqlformat('[%s] = %L', key, value));\n      }\n    }\n\n    return [ sets, values ];\n  }\n\n  insertStatement(table, attributes, options) {\n    if (options == null || options.pk == null) {\n      throw new Error('pk is required');\n    }\n\n    const [ names, placeholders, values ] = this.buildInsert(attributes);\n\n    // const returning = options && options.returnPrimaryKey === false ? '' : ' RETURNING ' + options.pk;\n\n    const sql = format('INSERT INTO %s (%s)\\nVALUES (%s)%s;',\n                       table,\n                       names.join(', '),\n                       placeholders.join(', '),\n                       '');\n\n    return {sql, values};\n  }\n\n  insertStatements(table, arrayOfAttributes, options) {\n    const arrayOfValues = [];\n\n    let names = null;\n\n    for (const attributes of arrayOfAttributes) {\n      const insert = this.buildInsert(attributes, names == null);\n\n      if (names == null) {\n        names = insert[0];\n      }\n\n      arrayOfValues.push('(' + insert[1].join(', ') + ')');\n    }\n\n    const sql = format('INSERT INTO %s (%s)\\nVALUES %s;',\n                       table,\n                       names.join(', '),\n                       arrayOfValues.join(',\\n'));\n\n    return {sql, values: {}};\n  }\n\n  async insert(table, attributes, options) {\n    const statement = this.insertStatement(table, attributes, options);\n\n    const result = await this.all(statement.sql, statement.values);\n\n    return +result[0].id;\n  }\n\n  toDatabase(value, column) {\n    if (value == null) {\n      return null;\n    }\n\n    switch (column.type) {\n      case 'datetime':\n        return value.toISOString();\n\n      default:\n        return super.toDatabase(value, column);\n    }\n  }\n\n  fromDatabase(value, column) {\n    if (value == null) {\n      return null;\n    }\n\n    switch (column.type) {\n      case 'datetime':\n        return new Date(value);\n\n      default:\n        return super.fromDatabase(value, column);\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]}